Metadata-Version: 2.4
Name: pyehsa
Version: 0.1.0
Summary: A Python library for Emerging Hot Spot Analysis (EHSA) of spatio-temporal data
Author-email: Lucas Azevedo <lucas.azevedo@cloudwalk.io>
License: MIT
Project-URL: Homepage, https://github.com/yourusername/PyEhsa
Project-URL: Documentation, https://pyehsa.readthedocs.io
Project-URL: Repository, https://github.com/yourusername/PyEhsa
Project-URL: Bug Tracker, https://github.com/yourusername/PyEhsa/issues
Keywords: spatial analysis,hotspots,statistics,gis,spatio-temporal
Classifier: Development Status :: 4 - Beta
Classifier: Intended Audience :: Science/Research
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Programming Language :: Python :: 3.12
Classifier: Topic :: Scientific/Engineering :: GIS
Classifier: Topic :: Scientific/Engineering :: Information Analysis
Requires-Python: >=3.9
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: pandas>=2.0.0
Requires-Dist: geopandas>=0.14.0
Requires-Dist: numpy>=1.24.0
Requires-Dist: scipy>=1.10.0
Requires-Dist: libpysal>=4.9.0
Requires-Dist: matplotlib>=3.6.0
Requires-Dist: seaborn>=0.12.0
Requires-Dist: plotly>=5.0.0
Requires-Dist: shapely>=2.0.0
Requires-Dist: python-geohash>=0.8.5
Requires-Dist: folium>=0.15.0
Requires-Dist: esda>=2.5.0
Requires-Dist: numba>=0.58.0
Provides-Extra: dev
Requires-Dist: pytest>=7.0; extra == "dev"
Requires-Dist: black>=23.0; extra == "dev"
Requires-Dist: isort>=5.12; extra == "dev"
Requires-Dist: pylint>=2.17; extra == "dev"
Requires-Dist: coverage>=7.0; extra == "dev"
Provides-Extra: docs
Requires-Dist: sphinx>=6.0; extra == "docs"
Requires-Dist: sphinx-rtd-theme>=1.3; extra == "docs"
Dynamic: license-file

# PyEhsa: Emerging Hot Spot Analysis in Python

[![PyPI version](https://badge.fury.io/py/pyehsa.svg)](https://badge.fury.io/py/pyehsa)
[![Python](https://img.shields.io/pypi/pyversions/pyehsa.svg)](https://pypi.org/project/pyehsa)
[![License: MIT](https://img.shields.io/badge/License-MIT-yellow.svg)](https://opensource.org/licenses/MIT)

**PyEhsa** is a Python library for **Emerging Hot Spot Analysis (EHSA)** of spatio-temporal data, providing functionality similar to R's `sfdep` package. It enables researchers and analysts to identify and classify spatial-temporal patterns, emerging hotspots, and coldspots in geographic data.

## üöÄ Key Features

- **Emerging Hot Spot Analysis**: Identify emerging patterns in spatio-temporal data
- **Spatial Statistics**: Calculate Getis-Ord Gi* statistics for hotspot detection  
- **Mann-Kendall Trend Analysis**: Detect trends in time series data
- **Multiple Classifications**: Comprehensive hotspot pattern classification
- **Visualization Tools**: Create interactive maps and plots with Folium and Plotly
- **Flexible Data Input**: Support for pandas DataFrames and GeoPandas GeoDataFrames

## üì¶ Installation

```bash
pip install pyehsa
```

## üîß Requirements

- Python 3.9+
- pandas >= 2.0.0
- geopandas >= 0.14.0  
- numpy >= 1.24.0
- scipy >= 1.10.0
- libpysal >= 4.9.0

## üìñ Quick Start

```python
import pandas as pd
import geopandas as gpd
from pyehsa import EmergingHotspotAnalysis

# Load your spatio-temporal data
df = pd.read_csv("your_data.csv")  
geo = gpd.read_file("your_shapes.geojson")

# Merge data with geometry
data = df.merge(geo[['region_id', 'geometry']], on='region_id')
data = gpd.GeoDataFrame(data, geometry='geometry')
data = data.set_crs(epsg=4326)

# Convert time column to datetime
data['time_period'] = pd.to_datetime(data['time_period'])

# Run Emerging Hot Spot Analysis
results = EmergingHotspotAnalysis.emerging_hotspot_analysis(
    data, 
    location_col='region_id', 
    time_col='time_period', 
    value_col='value',
    k=1,      # spatial neighbors
    nsim=199  # Monte Carlo simulations
)

# View results
print(results['classification'].value_counts())
```

## üìä Example Output

The analysis returns a DataFrame with classifications such as:
- **New Hot Spot**: Recently emerged statistically significant hotspots
- **Consecutive Hot Spot**: Hotspots that are statistically significant for multiple consecutive time periods  
- **Oscillating Hot Spot**: Areas that are statistically significant hotspots for some periods but not others
- **Cold Spot**: Areas with statistically significant low values
- **No Pattern Detected**: Areas without statistically significant patterns

## üó∫Ô∏è Visualization

```python
from pyehsa import EhsaPlotting

# Create interactive map
plotter = EhsaPlotting()
map_viz = plotter.plot_ehsa_map(results, 'classification')

# Save or display
map_viz.save('hotspot_analysis.html')
```

## üìö Documentation

For detailed documentation, examples, and API reference, visit: [https://pyehsa.readthedocs.io](https://pyehsa.readthedocs.io)

## ü§ù Contributing

We welcome contributions! Please see our [Contributing Guidelines](CONTRIBUTING.md) for details.

## üìÑ Citation

If you use PyEhsa in your research, please cite:

```bibtex
@software{pyehsa2025,
  author = {Azevedo, Lucas},
  title = {PyEhsa: Emerging Hot Spot Analysis in Python},
  year = {2025},
  url = {https://github.com/yourusername/PyEhsa}
}
```

## üìã License

This project is licensed under the MIT License - see the [LICENSE](LICENSE) file for details.

## üî¨ Related Work

PyEhsa is inspired by and provides similar functionality to:
- R's `sfdep` package for spatial dependence analysis
- ArcGIS's Emerging Hot Spot Analysis tool
- PySAL ecosystem for spatial analysis

## üìà Development Status

This package is actively developed and maintained. For support, please open an issue on [GitHub Issues](https://github.com/yourusername/PyEhsa/issues).

---
